#!/bin/bash
# Copyright Â© 2012 Martin Ueding <dev@martin-ueding.de>

# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see http://www.gnu.org/licenses/.

set -e
set -u

internal="LVDS1"

regex_beretta="(.*) was pistol whipped by (.*)."
regex_bleeding="(.*) bled to death from (.*)'s attacks."
regex_de="(.*) got a whole lot of hole from (.*)'s DE round."
regex_g36="(.*) was on the wrong end of (.*)'s G36.*"
regex_he="(.*) has become a nasty stain thanks to (.*)'s HE gren."
regex_hk107="(.*) was torn asunder by (.*)'s crass AK103."
regex_k69="(.*) HEARD (.*)'s HK69 gren... didn't AVOID it. Sucka."
regex_knive="(.*) was sliced a new orifice by (.*)."
regex_lr300="(.*) played 'catch the shiny bullet' with (.*)'s LR-300 rounds."
regex_m4="(.*) got a lead enema from (.*)'s retro M4."
regex_mp5k="(.*) was MP5K spammed without mercy by (.*)."
regex_negev="(.*) got shredded to pieces by (.*)'s Negev."
regex_psg1="(.*) was taken out by (.*)'s PSG1. Plink!."
regex_spas="(.*) was turned into peppered steak by (.*)'s SPAS blast."
regex_sr8="(.*) managed to slow down (.*)'s SR-8 round just a little."
regex_ump="(.*) danced the UMP tango to (.*)'s sweet sweet music."

regex_hit_out="You hit (.*) in the (.*) for (\d+). damage."
regex_hit_in="You were hit in the (.*) by (.*) for (\d+). damage."

set_dl_url() {
	cd "$HOME/.q3a/q3ut4"
	# Find the current IP address for the map download.
	ifconfig=$(ifconfig | grep -v 127.0.0.1 | grep -oP 'inet Adresse:([\d\.]+)')
	ip=${ifconfig#inet Adresse:}

	echo 'sets sv_dlURL "'$ip'"' >> q3config.cfg
}

set_resolution() {
	cd "$HOME/.q3a/q3ut4"
	mv q3config.cfg q3config.tmp
	grep -vP '^seta r_custom(?:width|height)' q3config.tmp > q3config.cfg
	echo "seta r_customwidth \"$1\"" >> q3config.cfg
	echo "seta r_customheight \"$2\"" >> q3config.cfg
}

cleanup() {
	xgamma -gamma 1.0
}

trap cleanup EXIT

playsound() {
	mplayer "$1" &> /dev/null &
}

starturt() {
	local urt="/opt/UrbanTerror/ioUrbanTerror.x86_64 +set ttycon 1"

	myname="$(grep 'seta name "\(.*\)"' /home/mu/.q3a/q3ut4/q3config.cfg | sed 's/seta name "\(.*\)"/\1/')"

	local tempdir="$(mktemp -d)"

	input="$tempdir/input"
	output="$tempdir/output"

	mkfifo "$input"
	mkfifo "$output"

	$urt < "$input" &> "$output" &

	echo "void" > "$input"

	while read line
	do
		echo "-> $line"

		echo "-> $line" >> run.log

		if [[ "$line" =~ $regex_he ]]
		then
			event_kill "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" "HE"

		elif [[ "$line" =~ $regex_m4 ]]
		then
			event_kill "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" "M4"

		elif [[ "$line" =~ $regex_hit_in ]]
		then
			event_hit_in "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" "${BASH_REMATCH[3]}"

		elif [[ "$line" =~ $regex_hit_out ]]
		then
			event_hit_out "${BASH_REMATCH[2]}" "${BASH_REMATCH[1]}" "${BASH_REMATCH[3]}"

		fi
	done < "$output"
}

event_kill() {
	from="$1"
	to="$2"
	weapon="$3"

	echo "Kill, $1, $2, $3."

	if [[ "$2" = "$myname" ]]
	then

		if [[ "$weapon" = "HE" ]]
		then
			echo "say There was a nade, $1." > "$input"
			playsound ~/Musik/Klingeltoene/miscom.mp3
		fi
	fi
}

event_hit_in() {
	damage="$3"
	where="$1"
	from="$2"

	echo "Hit in, $where, $from, $damage"
}

event_hit_out() {
	damage="$3"
	to="$2"
	where="$1"

	echo "Hit out, $where, $to, $damage"
}

if xrandr | grep -P 'HDMI\d? connected'
then
	set_resolution 1920 1200
	set_dl_url
	xrandr --output "$internal" --off
	starturt
	#think-dock on
else
	xgamma -gamma 1.4
	set_resolution 1366 768
	set_dl_url
	starturt
fi
